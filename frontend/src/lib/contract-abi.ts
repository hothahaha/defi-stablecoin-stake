export const LendingPoolABI = [
    {
        type: "constructor",
        inputs: [
            { name: "_insurancePool", type: "address", internalType: "address" },
            { name: "_rewardToken", type: "address", internalType: "address" },
            { name: "_rewardPerBlock", type: "uint256", internalType: "uint256" },
            { name: "_assetManager", type: "address", internalType: "address" },
            { name: "tokenAddresses", type: "address[]", internalType: "address[]" },
            { name: "priceFeedAddresses", type: "address[]", internalType: "address[]" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_getUserBorrowUsdValue",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "borrowAmount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "accRewardPerShare",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "addAsset",
        inputs: [
            { name: "token", type: "address", internalType: "address" },
            { name: "priceFeed", type: "address", internalType: "address" },
            {
                name: "config",
                type: "tuple",
                internalType: "struct AssetManager.AssetConfig",
                components: [
                    { name: "isSupported", type: "bool", internalType: "bool" },
                    { name: "collateralFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowFactor", type: "uint256", internalType: "uint256" },
                    { name: "symbol", type: "string", internalType: "string" },
                    { name: "name", type: "string", internalType: "string" },
                    { name: "decimals", type: "uint8", internalType: "uint8" },
                    { name: "icon", type: "string", internalType: "string" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "assetInfo",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [
            { name: "totalDeposits", type: "uint256", internalType: "uint256" },
            { name: "totalBorrows", type: "uint256", internalType: "uint256" },
            { name: "lastUpdateTime", type: "uint256", internalType: "uint256" },
            { name: "currentRate", type: "uint256", internalType: "uint256" },
            { name: "borrowRate", type: "uint256", internalType: "uint256" },
            { name: "depositRate", type: "uint256", internalType: "uint256" },
            { name: "reserveFactor", type: "uint256", internalType: "uint256" },
            { name: "borrowIndex", type: "uint256", internalType: "uint256" },
            { name: "depositIndex", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "assetManager",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract AssetManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "borrow",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "claimReward",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "deposit",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "dsc",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract DecentralizedStableCoin" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAccRewardPerShare",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAssetInfo",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct LendingPool.AssetInfo",
                components: [
                    { name: "totalDeposits", type: "uint256", internalType: "uint256" },
                    { name: "totalBorrows", type: "uint256", internalType: "uint256" },
                    { name: "lastUpdateTime", type: "uint256", internalType: "uint256" },
                    { name: "currentRate", type: "uint256", internalType: "uint256" },
                    { name: "borrowRate", type: "uint256", internalType: "uint256" },
                    { name: "depositRate", type: "uint256", internalType: "uint256" },
                    { name: "reserveFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowIndex", type: "uint256", internalType: "uint256" },
                    { name: "depositIndex", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAssetPrice",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getCollateralValue",
        inputs: [{ name: "user", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getMaxWithdrawAmount",
        inputs: [
            { name: "user", type: "address", internalType: "address" },
            { name: "asset", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getMaxWithdrawAmountInUSD",
        inputs: [{ name: "user", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPendingRewards",
        inputs: [
            { name: "user", type: "address", internalType: "address" },
            { name: "asset", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getRewardPerBlock",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getSupportedAssets",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "tuple[]",
                internalType: "struct LendingPool.AssetInfo[]",
                components: [
                    { name: "totalDeposits", type: "uint256", internalType: "uint256" },
                    { name: "totalBorrows", type: "uint256", internalType: "uint256" },
                    { name: "lastUpdateTime", type: "uint256", internalType: "uint256" },
                    { name: "currentRate", type: "uint256", internalType: "uint256" },
                    { name: "borrowRate", type: "uint256", internalType: "uint256" },
                    { name: "depositRate", type: "uint256", internalType: "uint256" },
                    { name: "reserveFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowIndex", type: "uint256", internalType: "uint256" },
                    { name: "depositIndex", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTotalValues",
        inputs: [],
        outputs: [
            { name: "totalDeposits", type: "uint256", internalType: "uint256" },
            { name: "totalBorrows", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getUserBorrowAmount",
        inputs: [
            { name: "user", type: "address", internalType: "address" },
            { name: "asset", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getUserBorrowLimit",
        inputs: [
            { name: "user", type: "address", internalType: "address" },
            { name: "asset", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getUserBorrowLimitInUSD",
        inputs: [{ name: "user", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getUserInfo",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "user", type: "address", internalType: "address" },
        ],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct LendingPool.UserInfo",
                components: [
                    { name: "depositAmount", type: "uint128", internalType: "uint128" },
                    { name: "borrowAmount", type: "uint128", internalType: "uint128" },
                    { name: "lastUpdateTime", type: "uint64", internalType: "uint64" },
                    { name: "rewardDebt", type: "uint256", internalType: "uint256" },
                    { name: "borrowIndex", type: "uint256", internalType: "uint256" },
                    { name: "depositIndex", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getUserRewardDebt",
        inputs: [{ name: "user", type: "address", internalType: "address" }],
        outputs: [{ name: "totalRewardDebt", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getUserTotalValueInUSD",
        inputs: [{ name: "user", type: "address", internalType: "address" }],
        outputs: [
            { name: "totalDepositValue", type: "uint256", internalType: "uint256" },
            { name: "totalBorrowValue", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getValueUsdByAmount",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "insurancePool",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract InsurancePool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "lastRewardBlock",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    { type: "function", name: "pause", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "paused",
        inputs: [],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "renounceOwnership",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "repay",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "rewardPerBlock",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    { type: "function", name: "unpause", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "userInfo",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [
            { name: "depositAmount", type: "uint128", internalType: "uint128" },
            { name: "borrowAmount", type: "uint128", internalType: "uint128" },
            { name: "lastUpdateTime", type: "uint64", internalType: "uint64" },
            { name: "rewardDebt", type: "uint256", internalType: "uint256" },
            { name: "borrowIndex", type: "uint256", internalType: "uint256" },
            { name: "depositIndex", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "withdraw",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AssetAdded",
        inputs: [
            { name: "token", type: "address", indexed: true, internalType: "address" },
            { name: "priceFeed", type: "address", indexed: true, internalType: "address" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "AssetInfoUpdated",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "newRate", type: "uint256", indexed: false, internalType: "uint256" },
            { name: "accRewardPerShare", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Borrow",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "user", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Deposit",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "user", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: true, internalType: "uint256" },
            { name: "timestamp", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Liquidate",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "user", type: "address", indexed: true, internalType: "address" },
            { name: "liquidator", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
            { name: "newOwner", type: "address", indexed: true, internalType: "address" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Paused",
        inputs: [{ name: "account", type: "address", indexed: false, internalType: "address" }],
        anonymous: false,
    },
    {
        type: "event",
        name: "Repay",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "user", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RewardClaimed",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "user", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Unpaused",
        inputs: [{ name: "account", type: "address", indexed: false, internalType: "address" }],
        anonymous: false,
    },
    {
        type: "event",
        name: "Withdraw",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "user", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    { type: "error", name: "EnforcedPause", inputs: [] },
    { type: "error", name: "ExpectedPause", inputs: [] },
    { type: "error", name: "InterestRateModel__BorrowsExceedDeposits", inputs: [] },
    { type: "error", name: "InterestRateModel__DepositsTooLarge", inputs: [] },
    { type: "error", name: "LendingPool__AssetAlreadySupported", inputs: [] },
    { type: "error", name: "LendingPool__AssetNotSupported", inputs: [] },
    {
        type: "error",
        name: "LendingPool__ExceedsAvailableLiquidity",
        inputs: [
            { name: "requested", type: "uint256", internalType: "uint256" },
            { name: "available", type: "uint256", internalType: "uint256" },
        ],
    },
    { type: "error", name: "LendingPool__ExceedsMaxBorrowFactor", inputs: [] },
    { type: "error", name: "LendingPool__HealthFactorNotImproved", inputs: [] },
    { type: "error", name: "LendingPool__HealthFactorOk", inputs: [] },
    { type: "error", name: "LendingPool__InsufficientBalance", inputs: [] },
    { type: "error", name: "LendingPool__InsufficientCollateral", inputs: [] },
    { type: "error", name: "LendingPool__InvalidAddress", inputs: [] },
    { type: "error", name: "LendingPool__InvalidAmount", inputs: [] },
    { type: "error", name: "LendingPool__InvalidCollateralFactor", inputs: [] },
    {
        type: "error",
        name: "LendingPool__InvalidCollateralRatio",
        inputs: [
            { name: "current", type: "uint256", internalType: "uint256" },
            { name: "required", type: "uint256", internalType: "uint256" },
        ],
    },
    { type: "error", name: "LendingPool__MintFailed", inputs: [] },
    { type: "error", name: "LendingPool__NotLiquidatable", inputs: [] },
    {
        type: "error",
        name: "LendingPool__TokenAddressesAndPriceFeedAddressesAmountsDontMatch",
        inputs: [],
    },
    { type: "error", name: "LendingPool__TransferFailed", inputs: [] },
    { type: "error", name: "LendingPool__WithdrawExceedsThreshold", inputs: [] },
    { type: "error", name: "LendingPool__WithdrawalExceedsThreshold", inputs: [] },
    {
        type: "error",
        name: "OwnableInvalidOwner",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
    },
    {
        type: "error",
        name: "OwnableUnauthorizedAccount",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
    },
    { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
    {
        type: "error",
        name: "SafeERC20FailedOperation",
        inputs: [{ name: "token", type: "address", internalType: "address" }],
    },
] as const;

export const AssetManagerABI = [
    { type: "constructor", inputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "addAsset",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            {
                name: "config",
                type: "tuple",
                internalType: "struct AssetManager.AssetConfig",
                components: [
                    { name: "isSupported", type: "bool", internalType: "bool" },
                    { name: "collateralFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowFactor", type: "uint256", internalType: "uint256" },
                    { name: "symbol", type: "string", internalType: "string" },
                    { name: "name", type: "string", internalType: "string" },
                    { name: "decimals", type: "uint8", internalType: "uint8" },
                    { name: "icon", type: "string", internalType: "string" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "addReserves",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "adders",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAssetConfig",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct AssetManager.AssetConfig",
                components: [
                    { name: "isSupported", type: "bool", internalType: "bool" },
                    { name: "collateralFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowFactor", type: "uint256", internalType: "uint256" },
                    { name: "symbol", type: "string", internalType: "string" },
                    { name: "name", type: "string", internalType: "string" },
                    { name: "decimals", type: "uint8", internalType: "uint8" },
                    { name: "icon", type: "string", internalType: "string" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAssetReserves",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getSupportedAssets",
        inputs: [],
        outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isAssetSupported",
        inputs: [{ name: "asset", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "lendingPool",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "renounceOwnership",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setLendingPool",
        inputs: [{ name: "_lendingPool", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "updateAddRole",
        inputs: [
            { name: "adder", type: "address", internalType: "address" },
            { name: "status", type: "bool", internalType: "bool" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "updateAsset",
        inputs: [
            { name: "asset", type: "address", internalType: "address" },
            {
                name: "config",
                type: "tuple",
                internalType: "struct AssetManager.AssetConfig",
                components: [
                    { name: "isSupported", type: "bool", internalType: "bool" },
                    { name: "collateralFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowFactor", type: "uint256", internalType: "uint256" },
                    { name: "symbol", type: "string", internalType: "string" },
                    { name: "name", type: "string", internalType: "string" },
                    { name: "decimals", type: "uint8", internalType: "uint8" },
                    { name: "icon", type: "string", internalType: "string" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "AdderStatusChanged",
        inputs: [
            { name: "adder", type: "address", indexed: true, internalType: "address" },
            { name: "status", type: "bool", indexed: false, internalType: "bool" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "AssetAdded",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            {
                name: "config",
                type: "tuple",
                indexed: false,
                internalType: "struct AssetManager.AssetConfig",
                components: [
                    { name: "isSupported", type: "bool", internalType: "bool" },
                    { name: "collateralFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowFactor", type: "uint256", internalType: "uint256" },
                    { name: "symbol", type: "string", internalType: "string" },
                    { name: "name", type: "string", internalType: "string" },
                    { name: "decimals", type: "uint8", internalType: "uint8" },
                    { name: "icon", type: "string", internalType: "string" },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "AssetRemoved",
        inputs: [{ name: "asset", type: "address", indexed: true, internalType: "address" }],
        anonymous: false,
    },
    {
        type: "event",
        name: "AssetUpdated",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            {
                name: "config",
                type: "tuple",
                indexed: false,
                internalType: "struct AssetManager.AssetConfig",
                components: [
                    { name: "isSupported", type: "bool", internalType: "bool" },
                    { name: "collateralFactor", type: "uint256", internalType: "uint256" },
                    { name: "borrowFactor", type: "uint256", internalType: "uint256" },
                    { name: "symbol", type: "string", internalType: "string" },
                    { name: "name", type: "string", internalType: "string" },
                    { name: "decimals", type: "uint8", internalType: "uint8" },
                    { name: "icon", type: "string", internalType: "string" },
                ],
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
            { name: "newOwner", type: "address", indexed: true, internalType: "address" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ReservesAdded",
        inputs: [
            { name: "asset", type: "address", indexed: true, internalType: "address" },
            { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        ],
        anonymous: false,
    },
    { type: "error", name: "AssetManager__AssetAlreadySupported", inputs: [] },
    { type: "error", name: "AssetManager__AssetNotSupported", inputs: [] },
    {
        type: "error",
        name: "AssetManager__InvalidAdder",
        inputs: [{ name: "adder", type: "address", internalType: "address" }],
    },
    { type: "error", name: "AssetManager__InvalidAmount", inputs: [] },
    { type: "error", name: "AssetManager__InvalidAsset", inputs: [] },
    { type: "error", name: "AssetManager__InvalidCaller", inputs: [] },
    { type: "error", name: "AssetManager__InvalidFactor", inputs: [] },
    {
        type: "error",
        name: "OwnableInvalidOwner",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
    },
    {
        type: "error",
        name: "OwnableUnauthorizedAccount",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
    },
] as const;
export const StablecoinABI = [] as const;
